/*
 * This file is generated by jOOQ.
*/
package com.sbn.erp.domain.tables;


import com.sbn.erp.domain.ErpDb;
import com.sbn.erp.domain.Indexes;
import com.sbn.erp.domain.Keys;
import com.sbn.erp.domain.tables.records.ProductCategoryRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ProductCategory extends TableImpl<ProductCategoryRecord> {

    private static final long serialVersionUID = -273711650;

    /**
     * The reference instance of <code>erp_db.product_category</code>
     */
    public static final ProductCategory PRODUCT_CATEGORY = new ProductCategory();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ProductCategoryRecord> getRecordType() {
        return ProductCategoryRecord.class;
    }

    /**
     * The column <code>erp_db.product_category.id</code>.
     */
    public final TableField<ProductCategoryRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>erp_db.product_category.name</code>.
     */
    public final TableField<ProductCategoryRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(50), this, "");

    /**
     * Create a <code>erp_db.product_category</code> table reference
     */
    public ProductCategory() {
        this(DSL.name("product_category"), null);
    }

    /**
     * Create an aliased <code>erp_db.product_category</code> table reference
     */
    public ProductCategory(String alias) {
        this(DSL.name(alias), PRODUCT_CATEGORY);
    }

    /**
     * Create an aliased <code>erp_db.product_category</code> table reference
     */
    public ProductCategory(Name alias) {
        this(alias, PRODUCT_CATEGORY);
    }

    private ProductCategory(Name alias, Table<ProductCategoryRecord> aliased) {
        this(alias, aliased, null);
    }

    private ProductCategory(Name alias, Table<ProductCategoryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return ErpDb.ERP_DB;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.PRODUCT_CATEGORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ProductCategoryRecord> getPrimaryKey() {
        return Keys.KEY_PRODUCT_CATEGORY_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ProductCategoryRecord>> getKeys() {
        return Arrays.<UniqueKey<ProductCategoryRecord>>asList(Keys.KEY_PRODUCT_CATEGORY_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductCategory as(String alias) {
        return new ProductCategory(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ProductCategory as(Name alias) {
        return new ProductCategory(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductCategory rename(String name) {
        return new ProductCategory(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public ProductCategory rename(Name name) {
        return new ProductCategory(name, null);
    }
}
